A ROOM OF ONE'S OWN...TO CODE
Irene Lam, Tiffany Moi, Carol Pan
SoftDev pd7
P00 - Da Art of Storytellin'
 _______   ________  __     __  __        ______    ______  
|       \ |        \|  \   |  \|  \      /      \  /      \ 
| $$$$$$$\| $$$$$$$$| $$   | $$| $$     |  $$$$$$\|  $$$$$$\
| $$  | $$| $$__    | $$   | $$| $$     | $$  | $$| $$ __\$$
| $$  | $$| $$  \    \$$\ /  $$| $$     | $$  | $$| $$|    \
| $$  | $$| $$$$$     \$$\  $$ | $$     | $$  | $$| $$ \$$$$
| $$__/ $$| $$_____    \$$ $$  | $$_____| $$__/ $$| $$__| $$
| $$    $$| $$     \    \$$$   | $$     \\$$    $$ \$$    $$
 \$$$$$$$  \$$$$$$$$     \$     \$$$$$$$$ \$$$$$$   \$$$$$$ 

**********<>***********
Format (APPEND TO END)
firstL -- TIMESTAMP
**********<>***********

/////////// Zone of Reflection \\\\\\\\\\\
------------------------------------------
OBSTACLES OVERCOME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Incremented ID as opposed to random numbers
- getting timestamps and updating timestamps to work
- making a site look nice(-ish) withOUT css
- authentication of user for login works

UNRESOLVED ISSUES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Committing and stashing do not resolve merge conflicts (Carol & Irene)
- ^correction : cannot exit vim editor in terminal on mac (Carol)
- About page doesn't refresh on mac (Irene)

COOL STUFF LEARNED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- sqlite can autoincrement and access the current time for a timestamp!
- each new sqlite database connection call opens up a new thread!
- when importing mods, function calls that would showup when running the module are also run in importing it!

MID-DEVELOPMENT DESIGN CHANGES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- changed about page to feed page bc originally feed page is the welcome page, which is only accessed once
- changed make_table from opening and closing dbs once overall to opening and closing in each method call bc otherwise sqlite dbs can't be accessed once connection is terminated

LESSONS LEARNED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Do not trust stack overflow blindly. Though it is (mostly) right, sometimes what'd work in one context of code won't work in another

============================================================
tiffanyM -- 2017-10-22 12:50
--------------------------
created the database schema

carolP -- 2017-10-22 15:44
--------------------------
created component map
populated root repository
linked submodule

ireneL -- 2017-10-22 20:42
--------------------------
- Created site map (showing linkage of user pathways and page visions for every prospective page)
============================================================
ireneL -- 2017-10-23 11:58
--------------------------
- Modified site map to correspond with updates (e.g. welcome, log out)
============================================================
tiffanyM -- 2017-10-24 12:32
--------------------------
wrote code to make tables
changed the database schema to reflect new design updates

carolP -- 2017-10-24 18:23
--------------------------
updated design.pdf
created a base html to be the basis of inheritance and included some format
created a create account html
============================================================
ireneL -- 2017-10-25 00:23
--------------------------
- Added templates
    - ABOUT: (to be updated) for basic information on how users should navigate the site
    - LOGIN: contains information relating to login (i.e. username, password, relevant error message)
    - PROFILE: (to be updated) for specific information regarding the user (e.g. blogs contributed to, blogs created, relevant time stamps)
    - WELCOME: redirects to login if the user is not logged in, otherwise displays the feed (to be updated)
- Welcome page contains a navigation bar
    - Links to the user profile page and about page, and log out button
    - Search functionality (e.g. searching for a specific blog)
    - Styled based on a Halloween theme, and includes other stylistic elements (e.g. positioning, size, font, margin, padding, width, text alignment)

tiffanyM -- 2017-10-25 01:03
--------------------------
began writing code for updating and adding to the tables

tiffanyM -- 2017-10-25 13:20
--------------------------
tested makeTable functions for createAcc and createBlog
started on updateBlog

carolP -- 2017-10-24 13:23
--------------------------
created path for create account
created auth path to make sure credentials are applicable
============================================================
ireneL -- 2017-10-26 02:29
--------------------------
- Database modifications
    - Modulized makeTable (+ initialized databases)
    - Created form for new blog
    - Retrieves data from form and inserts as blog into info.db
    - Started getBlog (pulls data from info.db)
- Template inheritance
    - Navigation bar present in profile, welcome, and about pages
- Createaccount and login pages are accessible via hyperlink (e.g. createaccount has link for login and vice versa)
- Updated README with launch instructions

tiffanyM -- 2017-10-26 18:33
--------------------------
added autoincremented IDs to the blogs table and debugged
added timestamps and debugged
moved makeTable into util folder
updated app.py to reflect the changes in makeTable and its location

carolP -- 2017-10-26 23:58
--------------------------
rewrote makeTable into make_table, and debugged
blog post id automatically increments
timestamp automatically uses current timestamp
tested cases for each make_table fxn, all verified and working
databases now usable in app.py
modified app.py such that new accounts can be added
modified base.html so background and navigation bar are removable
rewrote login.html and createaccount.html to use inheritance
============================================================
ireneL & carolP-- 2017-10-27 14:54
--------------------------
- Changed CSS styling to HTML (still with the pumpkin background)
- Adapted the about page to the feed page
- Adapted the initial welcome page to a page detailing the purposes of the page & instructions

tiffanyM -- 2017-10-27 21:34
--------------------------
added code to store hashed passwords
removed the hardcoded usernames and passwords
linked logged_in() in app.py to the accounts table with auth() in make_table.py
tested above modifications and debugged
============================================================
carolP -- 2017-10-28 16:01
--------------------------
updated design.pdf
create changes.txt

ireneL -- 2017-10-28 22:53
--------------------------
- Displays Feed
    - Pulls data from the database and ensures that html code in the contents does not interfere with the page's operation
    - Displays in a table, separating the name of the user, title, and content (ID and timestamp currently ignored because of questionable purpose)
    - Blogs are listed in reverse chronological order (newest -> oldest)
    - Individual user's feed display functionality
        - The author in each blog are links to the user's personal feed 
        - Personal feeds are accessible by everyone
        - A Personal feed only contains blogs created by the user, in reverse chronological order
        - Page customized to the specific user (i.e. name displayed in the hyperlink and in the contents of the page)
- Fixed issues involving getting the cursor of a database before opening
- Everything tested + debugged

carolP -- 2017-10-29 01:01
--------------------------
user can view just one post (includes new make_table functionality)
user can edit own post (includes new make_table functionality, and two new paths)
refilled out blogging.db to be more...real to life
============================================================
ireneL -- 2017-10-30 00:35
--------------------------
- Updated information on welcome page detailing purposes of the site and next steps
- Adapted search bar into My Feed
    - If the user has not created any blogs, a message from the mod appears explaining such
    - Otherwise, all blogs created by the user is displayed
- Adapted the original 'Profile' tab to a more generic 'Create a Blog' tab
- Everything tested + debugged
